{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yonikok/Documents/work/yik.dev/repos/washingtime-fe/components/SignIn.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport firebase from \"../firebase\";\nexport default (function (props) {\n  return __jsx(\"div\", {\n    className: \"jsx-2423388588\" + \" \" + \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2423388588\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    noValidate: true,\n    className: \"jsx-2423388588\" + \" \" + \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    onClick: onGoogleClick,\n    id: \"login-button\",\n    className: \"jsx-2423388588\" + \" \" + \"button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-2423388588\" + \" \" + \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, \"Login\")))), __jsx(_JSXStyle, {\n    id: \"2423388588\",\n    __self: _this\n  }, \".container.jsx-2423388588{@apply flex flex-1 justify-center;}.button.jsx-2423388588{@apply rounded-full px-5 py-2 bg-primary ml-3 my-2;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95b25pa29rL0RvY3VtZW50cy93b3JrL3lpay5kZXYvcmVwb3Mvd2FzaGluZ3RpbWUtZmUvY29tcG9uZW50cy9TaWduSW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJ3QixBQUlnQixBQUdBLGtDQUhDLGlCQUdBIiwiZmlsZSI6Ii9Vc2Vycy95b25pa29rL0RvY3VtZW50cy93b3JrL3lpay5kZXYvcmVwb3Mvd2FzaGluZ3RpbWUtZmUvY29tcG9uZW50cy9TaWduSW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZpcmViYXNlIGZyb20gXCIuLi9maXJlYmFzZVwiO1xuXG5leHBvcnQgZGVmYXVsdCAocHJvcHMpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzc05hbWU9XCJcIiBub1ZhbGlkYXRlPlxuICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uR29vZ2xlQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZD1cImxvZ2luLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2luXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAuY29udGFpbmVye1xuICAgICAgICAgICAgICAgICAgICBAYXBwbHkgZmxleCBmbGV4LTEganVzdGlmeS1jZW50ZXJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmJ1dHRvbntcbiAgICAgICAgICAgICAgICAgIEBhcHBseSByb3VuZGVkLWZ1bGwgcHgtNSBweS0yIGJnLXByaW1hcnkgbWwtMyBteS0yXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+KVxufVxuXG5jb25zdCBvbkdvb2dsZUNsaWNrID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc29sZS5sb2coZmlyZWJhc2UuR29vZ2xlQXV0aFByb3ZpZGVyKTtcbiAgICB2YXIgcHJvdmlkZXIgPSBuZXcgZmlyZWJhc2UuR29vZ2xlQXV0aFByb3ZpZGVyKCk7XG4gICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25JbldpdGhQb3B1cChwcm92aWRlcikudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgLy8gVGhpcyBnaXZlcyB5b3UgYSBHb29nbGUgQWNjZXNzIFRva2VuLiBZb3UgY2FuIHVzZSBpdCB0byBhY2Nlc3MgdGhlIEdvb2dsZSBBUEkuXG4gICAgICAgIHZhciB0b2tlbiA9IHJlc3VsdC5jcmVkZW50aWFsLmFjY2Vzc1Rva2VuO1xuICAgICAgICAvLyBUaGUgc2lnbmVkLWluIHVzZXIgaW5mby5cbiAgICAgICAgdmFyIHVzZXIgPSByZXN1bHQudXNlcjtcbiAgICAgICAgY29uc29sZS5sb2codXNlciwgdG9rZW4pXG4gICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgLy8gSGFuZGxlIEVycm9ycyBoZXJlLlxuICAgICAgICB2YXIgZXJyb3JDb2RlID0gZXJyb3IuY29kZTtcbiAgICAgICAgdmFyIGVycm9yTWVzc2FnZSA9IGVycm9yLm1lc3NhZ2U7XG4gICAgICAgIC8vIFRoZSBlbWFpbCBvZiB0aGUgdXNlcidzIGFjY291bnQgdXNlZC5cbiAgICAgICAgdmFyIGVtYWlsID0gZXJyb3IuZW1haWw7XG4gICAgICAgIC8vIFRoZSBmaXJlYmFzZS5hdXRoLkF1dGhDcmVkZW50aWFsIHR5cGUgdGhhdCB3YXMgdXNlZC5cbiAgICAgICAgdmFyIGNyZWRlbnRpYWwgPSBlcnJvci5jcmVkZW50aWFsO1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvckNvZGUsIGVycm9yTWVzc2FnZSwgZW1haWwsIGNyZWRlbnRpYWwpXG4gICAgfSk7XG59Il19 */\\n/*@ sourceURL=/Users/yonikok/Documents/work/yik.dev/repos/washingtime-fe/components/SignIn.js */\"));\n});\n\nvar onGoogleClick = function onGoogleClick(e) {\n  e.preventDefault();\n  console.log(firebase.GoogleAuthProvider);\n  var provider = new firebase.GoogleAuthProvider();\n  firebase.auth().signInWithPopup(provider).then(function (result) {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    var token = result.credential.accessToken; // The signed-in user info.\n\n    var user = result.user;\n    console.log(user, token);\n  })[\"catch\"](function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential;\n    console.log(errorCode, errorMessage, email, credential);\n  });\n};","map":{"version":3,"sources":["/Users/yonikok/Documents/work/yik.dev/repos/washingtime-fe/components/SignIn.js"],"names":["React","firebase","props","onGoogleClick","e","preventDefault","console","log","GoogleAuthProvider","provider","auth","signInWithPopup","then","result","token","credential","accessToken","user","error","errorCode","code","errorMessage","message","email"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,gBAAe,UAACC,KAAD,EAAW;AACtB,SACI;AAAA,wCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAmB,IAAA,UAAU,MAA7B;AAAA,wCAAgB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAEI,IAAA,OAAO,EAAEC,aAFb;AAGI,IAAA,EAAE,EAAC,cAHP;AAAA,wCACc,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAA,wCAAgB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CADJ,CADJ,CADJ;AAAA;AAAA;AAAA,g+FADJ;AAwBH,CAzBD;;AA2BA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AACzBA,EAAAA,CAAC,CAACC,cAAF;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,kBAArB;AACA,MAAIC,QAAQ,GAAG,IAAIR,QAAQ,CAACO,kBAAb,EAAf;AACAP,EAAAA,QAAQ,CAACS,IAAT,GAAgBC,eAAhB,CAAgCF,QAAhC,EAA0CG,IAA1C,CAA+C,UAASC,MAAT,EAAiB;AAC5D;AACA,QAAIC,KAAK,GAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B,CAF4D,CAG5D;;AACA,QAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ,EAAkBH,KAAlB;AACH,GAND,WAMS,UAASI,KAAT,EAAgB;AACrB;AACA,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHqB,CAIrB;;AACA,QAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALqB,CAMrB;;AACA,QAAIR,UAAU,GAAGG,KAAK,CAACH,UAAvB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ,EAAuBE,YAAvB,EAAqCE,KAArC,EAA4CR,UAA5C;AACH,GAfD;AAgBH,CApBD","sourcesContent":["import React from 'react';\nimport firebase from \"../firebase\";\n\nexport default (props) => {\n    return (\n        <div className=\"container\">\n            <div>\n                <form className=\"\" noValidate>\n                    <a\n                        className=\"button\"\n                        onClick={onGoogleClick}\n                        id=\"login-button\"\n                    >\n                        <span className=\"\">\n                            Login\n                        </span>\n                    </a>\n                </form>\n            </div>\n            <style jsx>{`\n                .container{\n                    @apply flex flex-1 justify-center\n                }\n                .button{\n                  @apply rounded-full px-5 py-2 bg-primary ml-3 my-2\n                }\n             `}</style>\n        </div>)\n}\n\nconst onGoogleClick = (e) => {\n    e.preventDefault();\n    console.log(firebase.GoogleAuthProvider);\n    var provider = new firebase.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        console.log(user, token)\n    }).catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(errorCode, errorMessage, email, credential)\n    });\n}"]},"metadata":{},"sourceType":"module"}